#
# Copyright (c) 2020, 2022, Oracle and/or its affiliates.
#
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl
#
# Default values for oudsm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: oracle/oudsm
  tag: 12.2.1.4.0
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: regcred

nameOverride: ""

fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 7001
  sslPort: 7002

ingress:
  enabled: true
  type: nginx
  # Hostname to be used with Ingress Rules.
  # If not set, hostname would be configured according to fullname
  # Hosts would be configured as <fullname>-admin.<domain>, <fullname>-admin-0.<domain>, <fullname>-admin-1.<domain>, etc.
  host:
  # domain name to be used with Ingress Rules.
  # In ingress rules, hosts would be configured as <host>.<domain>, <host>-0.<domain>, <host>-1.<domain>, etc.
  domain:
  # Backend Port to be used. Either http or https
  backendPort: http
  # SSL/TLS configuration for the Ingress
  # Flag to decide whether to force TLS/HTTPS or not
  tlsEnabled: true
  # Secret name to use an already created TLS Secret. If such secret is not provided, one would be created with name <fullname>-tls-cert
  # If the TLS Secret is in different namespace, name can be mentioned as <namespace>/<tlsSecretName>
  tlsSecret:
  # Parameters for generation of SelfSigned Cert
  # Subject's common name (cn) for SelfSigned Cert. Default Value <fullname>
  certCN:
  # Validity of Self-Signed Cert in days
  certValidityDays: 365
  nginxAnnotations:
    kubernetes.io/ingress.class: nginx
    # Following two annotations are for session stickyness
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    # Server-side HTTPS enforcement through redirect - for specific ingress resources
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # Required to be set if backendPort is configured as https
    # nginx.ingress.kubernetes.io/backend-protocol: "https"
  nginxAnnotationsTLS:
    kubernetes.io/ingress.class: nginx
    # Following two annotations are for session stickyness
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    # Required to be set if backendPort is configured as https
    # nginx.ingress.kubernetes.io/backend-protocol: "https"
    # For Forcing TLS/HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_input_headers "X-Forwarded-Proto: https";
      more_set_input_headers "WL-Proxy-SSL: true";
    # nginx.ingress.kubernetes.io/x-forwarded-proto: "https"
    # nginx.ingress.kubernetes.io/x-forwarded-port: "https"

nodeSelector: {}

tolerations: []

affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - oudsm
secret:
  # If enabled it will use the secret created with base64 encoding. if value is false, secret would not be used and input values (through --set, --values, etc.) would be used while creation of pods.
  enabled: true
  # provided the secret name  to use an already created Secret
  name:
  type: opaque

persistence:
  # If enabled, it will use the persistent volume.
  # if value is false, PV and PVC would not be used and pods would be using the default emptyDir mount volume
  enabled: true
  # provided the pvname to use an already created Persistent Volume. If blank, will use the default name from Chart
  pvname:
  # provided the pvname to use an already created Persistent Volume Claim. If blank, will use default name from Chart
  pvcname:
  accessMode: ReadWriteMany
  size: 20Gi
  reclaimPolicy: "Delete"
  storageClass: manual
# default supported values: either filesystem or networkstorage or custom
  type: filesystem
  networkstorage:
    nfs:
      path: /scratch/shared/oudsm_user_projects
      server: 0.0.0.0
  filesystem:
    hostPath:
      # The path location mentioned should be created and made accessible with necessary privileges for access from pods/containers.
      path: /scratch/shared/oudsm_user_projects
  custom:
    # YAML content to be included in PersistenceVolume Object
  annotations: {}

# Parameters/Configurations for OUDSM Deployment
oudsm:
  # Weblogic Administration User
  adminUser:
  # Password for Weblogic Administration User
  adminPass:
  # Expected startup time. After specified seconds readinessProbe would start
  startupTime: 900
  # Paramter to decide livenessProbe initialDelaySeconds
  livenessProbeInitialDelay: 1200
  # Whether to invoke setWeblogicPluginEnabled or not
  weblogicPluginEnabled: "true"

# Configuration for Logstash deployment
elk:
  # Enabled flag to enable the integrated ELK stack for OUD
  enabled: false
  imagePullSecrets:
    - name: dockercred
  IntegrationEnabled: false
  logStashImage: logstash:8.3.1
  logstashConfigMap:
  esindex: oudsmlogs-00001
  eshosts: http://elasticsearch.oudsmns.svc.cluster.local:9200
  sslenabled: false
  esuser: logstash_internal
  espassword: elasticsearch-pw-elastic
  esapikey:
  escert: |
    -----BEGIN CERTIFICATE-----
    MIIDVjCCAj6gAwIBAgIRAOqQ3Gy75NvPPQUN5kXqNQUwDQYJKoZIhvcNAQELBQAw
    NTEWMBQGA1UECxMNZWxhc3RpY3NlYXJjaDEbMBkGA1UEAxMSZWxhc3RpY3NlYXJj
    aC1odHRwMB4XDTIyMDgyNDA1MTU1OVoXDTIzMDgyNDA1MjU1OVowNTEWMBQGA1UE
    CxMNZWxhc3RpY3NlYXJjaDEbMBkGA1UEAxMSZWxhc3RpY3NlYXJjaC1odHRwMIIB
    IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsQOnxUm9uF32+lyc9SA3WcMZ
    P1X7TbHMDuO/l3UHBUf5F/bt2m3YkGw+enIos9wzuUNpjIwVt8q4WrRCMl80nAQ0
    yCXrfLSI9zaHxEC8Ht7V0U+7Sgu5uysD4tyZ9T0Q5zjvkWS6oBPxhfri3OQfPvUW
    gQ6wJaPGDteYZAwiBMvPEkmh0VUTBTXjToHrtrT7pzmz5BBWnUzdf+jv0+nEfedm
    mMWw/8jqyqid7bu7bo6gKBZ8zk06n2iMaXzmGW34QlYRLBgubThhxyDE7joZ4NTA
    UFEJecZR2fccmpN8CNkT9Ex4Hq88nh2OP5XKKPNF4kLh2u6F4auF7Uz42jwvIwID
    AQABo2EwXzAOBgNVHQ8BAf8EBAMCAoQwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsG
    AQUFBwMCMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFLQb/IjHHkSmHgKSPY7r
    zBIJZMbdMA0GCSqGSIb3DQEBCwUAA4IBAQA01qY0tGIPsKNkn7blxRjEYkTg59Z5
    vi6MCpGtdoyZeJgH621IpwyB34Hpu1RQfyg1aNgmOtIK9cvQZRl008DHF4AiHYhU
    6xe3cjI/QxDXwitoBgWl+a0mkwhSmzJt7TuzImq7RMO4ws3M/nGeNUwFjwsQu86+
    N/Y3RuuUVbK1xy8Jdz3FZADIgHVPN6GQwYKEpWrZNapKBXjunjCZmpBFxqGMRF44
    fcSKFlFkwjyTq4kgq44NPv18NMfKCYZcK7ttRTiep77vKB7No/TM69Oz5ZHhQ+2Q
    pSGg3QF+1fOCFCgWXFEOle6lQ5i8a/GihY0FuphrZxP9ovZ/EKPpE6Gq
    -----END CERTIFICATE-----
